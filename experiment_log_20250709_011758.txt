[0;34m[2025-07-09 01:17:58][0m Starting EEG Analysis Complete Model Training
[0;34m[2025-07-09 01:17:58][0m Configuration file: eeg_analysis/configs/window_model_config.yaml
[0;34m[2025-07-09 01:17:58][0m Log file: experiment_log_20250709_011758.txt
[0;34m[2025-07-09 01:17:58][0m Total experiments to run: 42
[0;34m[2025-07-09 01:17:58][0m === PHASE 1: Models without feature selection ===
[0;34m[2025-07-09 01:17:58][0m Starting experiment: random_forest_no_fs
[0;34m[2025-07-09 01:17:58][0m MLflow experiment: eeg_tree_models_baseline
[0;34m[2025-07-09 01:17:58][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type random_forest
[0;32m[SUCCESS][0m Completed: random_forest_no_fs
[0;34m[2025-07-09 01:19:38][0m Starting experiment: gradient_boosting_no_fs
[0;34m[2025-07-09 01:19:38][0m MLflow experiment: eeg_tree_models_baseline
[0;34m[2025-07-09 01:19:38][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type gradient_boosting
[0;32m[SUCCESS][0m Completed: gradient_boosting_no_fs
[0;34m[2025-07-09 01:21:17][0m Starting experiment: logistic_regression_no_fs
[0;34m[2025-07-09 01:21:17][0m MLflow experiment: eeg_linear_models_baseline
[0;34m[2025-07-09 01:21:17][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type logistic_regression
[0;32m[SUCCESS][0m Completed: logistic_regression_no_fs
[0;34m[2025-07-09 01:22:59][0m Starting experiment: svm_no_fs
[0;34m[2025-07-09 01:22:59][0m MLflow experiment: eeg_linear_models_baseline
[0;34m[2025-07-09 01:22:59][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type svm
[0;32m[SUCCESS][0m Completed: svm_no_fs
[0;34m[2025-07-09 01:24:38][0m Starting experiment: pytorch_mlp_no_fs
[0;34m[2025-07-09 01:24:38][0m MLflow experiment: eeg_deep_learning_baseline
[0;34m[2025-07-09 01:24:38][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type pytorch_mlp
[0;31m[ERROR][0m Failed: pytorch_mlp_no_fs
[0;34m[2025-07-09 01:24:45][0m Starting experiment: keras_mlp_no_fs
[0;34m[2025-07-09 01:24:45][0m MLflow experiment: eeg_deep_learning_baseline
[0;34m[2025-07-09 01:24:45][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type keras_mlp
[0;31m[ERROR][0m Failed: keras_mlp_no_fs
[0;34m[2025-07-09 01:24:51][0m === PHASE 2: Models with feature selection ===
[0;34m[2025-07-09 01:24:51][0m Starting experiment: random_forest_fs_select_k_best_f_classif_10
[0;34m[2025-07-09 01:24:51][0m MLflow experiment: eeg_tree_models_feature_selection
[0;34m[2025-07-09 01:24:51][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type random_forest --enable-feature-selection --n-features-select 10 --fs-method select_k_best_f_classif
[0;32m[SUCCESS][0m Completed: random_forest_fs_select_k_best_f_classif_10
[0;34m[2025-07-09 01:25:37][0m Starting experiment: random_forest_fs_select_k_best_f_classif_15
[0;34m[2025-07-09 01:25:37][0m MLflow experiment: eeg_tree_models_feature_selection
[0;34m[2025-07-09 01:25:37][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type random_forest --enable-feature-selection --n-features-select 15 --fs-method select_k_best_f_classif
[0;32m[SUCCESS][0m Completed: random_forest_fs_select_k_best_f_classif_15
[0;34m[2025-07-09 01:26:25][0m Starting experiment: random_forest_fs_select_k_best_f_classif_20
[0;34m[2025-07-09 01:26:25][0m MLflow experiment: eeg_tree_models_feature_selection
[0;34m[2025-07-09 01:26:25][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type random_forest --enable-feature-selection --n-features-select 20 --fs-method select_k_best_f_classif
[0;32m[SUCCESS][0m Completed: random_forest_fs_select_k_best_f_classif_20
[0;34m[2025-07-09 01:27:23][0m Starting experiment: random_forest_fs_select_k_best_mutual_info_10
[0;34m[2025-07-09 01:27:23][0m MLflow experiment: eeg_tree_models_feature_selection
[0;34m[2025-07-09 01:27:23][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type random_forest --enable-feature-selection --n-features-select 10 --fs-method select_k_best_mutual_info
[0;32m[SUCCESS][0m Completed: random_forest_fs_select_k_best_mutual_info_10
[0;34m[2025-07-09 01:28:06][0m Starting experiment: random_forest_fs_select_k_best_mutual_info_15
[0;34m[2025-07-09 01:28:06][0m MLflow experiment: eeg_tree_models_feature_selection
[0;34m[2025-07-09 01:28:06][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type random_forest --enable-feature-selection --n-features-select 15 --fs-method select_k_best_mutual_info
[0;32m[SUCCESS][0m Completed: random_forest_fs_select_k_best_mutual_info_15
[0;34m[2025-07-09 01:28:50][0m Starting experiment: random_forest_fs_select_k_best_mutual_info_20
[0;34m[2025-07-09 01:28:50][0m MLflow experiment: eeg_tree_models_feature_selection
[0;34m[2025-07-09 01:28:50][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type random_forest --enable-feature-selection --n-features-select 20 --fs-method select_k_best_mutual_info
[0;32m[SUCCESS][0m Completed: random_forest_fs_select_k_best_mutual_info_20
[0;34m[2025-07-09 01:29:44][0m Starting experiment: gradient_boosting_fs_select_k_best_f_classif_10
[0;34m[2025-07-09 01:29:44][0m MLflow experiment: eeg_tree_models_feature_selection
[0;34m[2025-07-09 01:29:44][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type gradient_boosting --enable-feature-selection --n-features-select 10 --fs-method select_k_best_f_classif
[0;32m[SUCCESS][0m Completed: gradient_boosting_fs_select_k_best_f_classif_10
[0;34m[2025-07-09 01:30:30][0m Starting experiment: gradient_boosting_fs_select_k_best_f_classif_15
[0;34m[2025-07-09 01:30:31][0m MLflow experiment: eeg_tree_models_feature_selection
[0;34m[2025-07-09 01:30:31][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type gradient_boosting --enable-feature-selection --n-features-select 15 --fs-method select_k_best_f_classif
[0;32m[SUCCESS][0m Completed: gradient_boosting_fs_select_k_best_f_classif_15
[0;34m[2025-07-09 01:31:18][0m Starting experiment: gradient_boosting_fs_select_k_best_f_classif_20
[0;34m[2025-07-09 01:31:18][0m MLflow experiment: eeg_tree_models_feature_selection
[0;34m[2025-07-09 01:31:18][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type gradient_boosting --enable-feature-selection --n-features-select 20 --fs-method select_k_best_f_classif
[0;32m[SUCCESS][0m Completed: gradient_boosting_fs_select_k_best_f_classif_20
[0;34m[2025-07-09 01:32:18][0m Starting experiment: gradient_boosting_fs_select_k_best_mutual_info_10
[0;34m[2025-07-09 01:32:18][0m MLflow experiment: eeg_tree_models_feature_selection
[0;34m[2025-07-09 01:32:18][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type gradient_boosting --enable-feature-selection --n-features-select 10 --fs-method select_k_best_mutual_info
[0;32m[SUCCESS][0m Completed: gradient_boosting_fs_select_k_best_mutual_info_10
[0;34m[2025-07-09 01:33:04][0m Starting experiment: gradient_boosting_fs_select_k_best_mutual_info_15
[0;34m[2025-07-09 01:33:04][0m MLflow experiment: eeg_tree_models_feature_selection
[0;34m[2025-07-09 01:33:04][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type gradient_boosting --enable-feature-selection --n-features-select 15 --fs-method select_k_best_mutual_info
[0;32m[SUCCESS][0m Completed: gradient_boosting_fs_select_k_best_mutual_info_15
[0;34m[2025-07-09 01:33:59][0m Starting experiment: gradient_boosting_fs_select_k_best_mutual_info_20
[0;34m[2025-07-09 01:33:59][0m MLflow experiment: eeg_tree_models_feature_selection
[0;34m[2025-07-09 01:33:59][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type gradient_boosting --enable-feature-selection --n-features-select 20 --fs-method select_k_best_mutual_info
[0;32m[SUCCESS][0m Completed: gradient_boosting_fs_select_k_best_mutual_info_20
[0;34m[2025-07-09 01:34:59][0m Starting experiment: logistic_regression_fs_select_k_best_f_classif_10
[0;34m[2025-07-09 01:34:59][0m MLflow experiment: eeg_linear_models_feature_selection
[0;34m[2025-07-09 01:34:59][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type logistic_regression --enable-feature-selection --n-features-select 10 --fs-method select_k_best_f_classif
[0;32m[SUCCESS][0m Completed: logistic_regression_fs_select_k_best_f_classif_10
[0;34m[2025-07-09 01:35:47][0m Starting experiment: logistic_regression_fs_select_k_best_f_classif_15
[0;34m[2025-07-09 01:35:47][0m MLflow experiment: eeg_linear_models_feature_selection
[0;34m[2025-07-09 01:35:47][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type logistic_regression --enable-feature-selection --n-features-select 15 --fs-method select_k_best_f_classif
[0;32m[SUCCESS][0m Completed: logistic_regression_fs_select_k_best_f_classif_15
[0;34m[2025-07-09 01:36:45][0m Starting experiment: logistic_regression_fs_select_k_best_f_classif_20
[0;34m[2025-07-09 01:36:45][0m MLflow experiment: eeg_linear_models_feature_selection
[0;34m[2025-07-09 01:36:45][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type logistic_regression --enable-feature-selection --n-features-select 20 --fs-method select_k_best_f_classif
[0;32m[SUCCESS][0m Completed: logistic_regression_fs_select_k_best_f_classif_20
[0;34m[2025-07-09 01:37:53][0m Starting experiment: logistic_regression_fs_select_k_best_mutual_info_10
[0;34m[2025-07-09 01:37:53][0m MLflow experiment: eeg_linear_models_feature_selection
[0;34m[2025-07-09 01:37:53][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type logistic_regression --enable-feature-selection --n-features-select 10 --fs-method select_k_best_mutual_info
[0;32m[SUCCESS][0m Completed: logistic_regression_fs_select_k_best_mutual_info_10
[0;34m[2025-07-09 01:38:37][0m Starting experiment: logistic_regression_fs_select_k_best_mutual_info_15
[0;34m[2025-07-09 01:38:37][0m MLflow experiment: eeg_linear_models_feature_selection
[0;34m[2025-07-09 01:38:37][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type logistic_regression --enable-feature-selection --n-features-select 15 --fs-method select_k_best_mutual_info
[0;32m[SUCCESS][0m Completed: logistic_regression_fs_select_k_best_mutual_info_15
[0;34m[2025-07-09 01:39:32][0m Starting experiment: logistic_regression_fs_select_k_best_mutual_info_20
[0;34m[2025-07-09 01:39:32][0m MLflow experiment: eeg_linear_models_feature_selection
[0;34m[2025-07-09 01:39:32][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type logistic_regression --enable-feature-selection --n-features-select 20 --fs-method select_k_best_mutual_info
[0;32m[SUCCESS][0m Completed: logistic_regression_fs_select_k_best_mutual_info_20
[0;34m[2025-07-09 01:40:32][0m Starting experiment: svm_fs_select_k_best_f_classif_10
[0;34m[2025-07-09 01:40:32][0m MLflow experiment: eeg_linear_models_feature_selection
[0;34m[2025-07-09 01:40:32][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type svm --enable-feature-selection --n-features-select 10 --fs-method select_k_best_f_classif
[0;32m[SUCCESS][0m Completed: svm_fs_select_k_best_f_classif_10
[0;34m[2025-07-09 01:41:21][0m Starting experiment: svm_fs_select_k_best_f_classif_15
[0;34m[2025-07-09 01:41:21][0m MLflow experiment: eeg_linear_models_feature_selection
[0;34m[2025-07-09 01:41:21][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type svm --enable-feature-selection --n-features-select 15 --fs-method select_k_best_f_classif
[0;32m[SUCCESS][0m Completed: svm_fs_select_k_best_f_classif_15
[0;34m[2025-07-09 01:42:12][0m Starting experiment: svm_fs_select_k_best_f_classif_20
[0;34m[2025-07-09 01:42:12][0m MLflow experiment: eeg_linear_models_feature_selection
[0;34m[2025-07-09 01:42:12][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type svm --enable-feature-selection --n-features-select 20 --fs-method select_k_best_f_classif
[0;32m[SUCCESS][0m Completed: svm_fs_select_k_best_f_classif_20
[0;34m[2025-07-09 01:43:11][0m Starting experiment: svm_fs_select_k_best_mutual_info_10
[0;34m[2025-07-09 01:43:11][0m MLflow experiment: eeg_linear_models_feature_selection
[0;34m[2025-07-09 01:43:11][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type svm --enable-feature-selection --n-features-select 10 --fs-method select_k_best_mutual_info
[0;32m[SUCCESS][0m Completed: svm_fs_select_k_best_mutual_info_10
[0;34m[2025-07-09 01:43:55][0m Starting experiment: svm_fs_select_k_best_mutual_info_15
[0;34m[2025-07-09 01:43:55][0m MLflow experiment: eeg_linear_models_feature_selection
[0;34m[2025-07-09 01:43:55][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type svm --enable-feature-selection --n-features-select 15 --fs-method select_k_best_mutual_info
[0;32m[SUCCESS][0m Completed: svm_fs_select_k_best_mutual_info_15
[0;34m[2025-07-09 01:44:39][0m Starting experiment: svm_fs_select_k_best_mutual_info_20
[0;34m[2025-07-09 01:44:40][0m MLflow experiment: eeg_linear_models_feature_selection
[0;34m[2025-07-09 01:44:40][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type svm --enable-feature-selection --n-features-select 20 --fs-method select_k_best_mutual_info
[0;32m[SUCCESS][0m Completed: svm_fs_select_k_best_mutual_info_20
[0;34m[2025-07-09 01:45:35][0m Starting experiment: pytorch_mlp_fs_select_k_best_f_classif_10
[0;34m[2025-07-09 01:45:35][0m MLflow experiment: eeg_deep_learning_feature_selection
[0;34m[2025-07-09 01:45:35][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type pytorch_mlp --enable-feature-selection --n-features-select 10 --fs-method select_k_best_f_classif
[0;31m[ERROR][0m Failed: pytorch_mlp_fs_select_k_best_f_classif_10
[0;34m[2025-07-09 01:45:42][0m Starting experiment: pytorch_mlp_fs_select_k_best_f_classif_15
[0;34m[2025-07-09 01:45:42][0m MLflow experiment: eeg_deep_learning_feature_selection
[0;34m[2025-07-09 01:45:42][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type pytorch_mlp --enable-feature-selection --n-features-select 15 --fs-method select_k_best_f_classif
[0;31m[ERROR][0m Failed: pytorch_mlp_fs_select_k_best_f_classif_15
[0;34m[2025-07-09 01:45:48][0m Starting experiment: pytorch_mlp_fs_select_k_best_f_classif_20
[0;34m[2025-07-09 01:45:48][0m MLflow experiment: eeg_deep_learning_feature_selection
[0;34m[2025-07-09 01:45:48][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type pytorch_mlp --enable-feature-selection --n-features-select 20 --fs-method select_k_best_f_classif
[0;31m[ERROR][0m Failed: pytorch_mlp_fs_select_k_best_f_classif_20
[0;34m[2025-07-09 01:45:55][0m Starting experiment: pytorch_mlp_fs_select_k_best_mutual_info_10
[0;34m[2025-07-09 01:45:55][0m MLflow experiment: eeg_deep_learning_feature_selection
[0;34m[2025-07-09 01:45:55][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type pytorch_mlp --enable-feature-selection --n-features-select 10 --fs-method select_k_best_mutual_info
[0;31m[ERROR][0m Failed: pytorch_mlp_fs_select_k_best_mutual_info_10
[0;34m[2025-07-09 01:46:01][0m Starting experiment: pytorch_mlp_fs_select_k_best_mutual_info_15
[0;34m[2025-07-09 01:46:01][0m MLflow experiment: eeg_deep_learning_feature_selection
[0;34m[2025-07-09 01:46:01][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type pytorch_mlp --enable-feature-selection --n-features-select 15 --fs-method select_k_best_mutual_info
[0;31m[ERROR][0m Failed: pytorch_mlp_fs_select_k_best_mutual_info_15
[0;34m[2025-07-09 01:46:08][0m Starting experiment: pytorch_mlp_fs_select_k_best_mutual_info_20
[0;34m[2025-07-09 01:46:08][0m MLflow experiment: eeg_deep_learning_feature_selection
[0;34m[2025-07-09 01:46:08][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type pytorch_mlp --enable-feature-selection --n-features-select 20 --fs-method select_k_best_mutual_info
[0;31m[ERROR][0m Failed: pytorch_mlp_fs_select_k_best_mutual_info_20
[0;34m[2025-07-09 01:46:14][0m Starting experiment: keras_mlp_fs_select_k_best_f_classif_10
[0;34m[2025-07-09 01:46:14][0m MLflow experiment: eeg_deep_learning_feature_selection
[0;34m[2025-07-09 01:46:14][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type keras_mlp --enable-feature-selection --n-features-select 10 --fs-method select_k_best_f_classif
[0;31m[ERROR][0m Failed: keras_mlp_fs_select_k_best_f_classif_10
[0;34m[2025-07-09 01:46:21][0m Starting experiment: keras_mlp_fs_select_k_best_f_classif_15
[0;34m[2025-07-09 01:46:21][0m MLflow experiment: eeg_deep_learning_feature_selection
[0;34m[2025-07-09 01:46:21][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type keras_mlp --enable-feature-selection --n-features-select 15 --fs-method select_k_best_f_classif
[0;31m[ERROR][0m Failed: keras_mlp_fs_select_k_best_f_classif_15
[0;34m[2025-07-09 01:46:28][0m Starting experiment: keras_mlp_fs_select_k_best_f_classif_20
[0;34m[2025-07-09 01:46:28][0m MLflow experiment: eeg_deep_learning_feature_selection
[0;34m[2025-07-09 01:46:28][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type keras_mlp --enable-feature-selection --n-features-select 20 --fs-method select_k_best_f_classif
[0;31m[ERROR][0m Failed: keras_mlp_fs_select_k_best_f_classif_20
[0;34m[2025-07-09 01:46:34][0m Starting experiment: keras_mlp_fs_select_k_best_mutual_info_10
[0;34m[2025-07-09 01:46:34][0m MLflow experiment: eeg_deep_learning_feature_selection
[0;34m[2025-07-09 01:46:34][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type keras_mlp --enable-feature-selection --n-features-select 10 --fs-method select_k_best_mutual_info
[0;31m[ERROR][0m Failed: keras_mlp_fs_select_k_best_mutual_info_10
[0;34m[2025-07-09 01:46:41][0m Starting experiment: keras_mlp_fs_select_k_best_mutual_info_15
[0;34m[2025-07-09 01:46:41][0m MLflow experiment: eeg_deep_learning_feature_selection
[0;34m[2025-07-09 01:46:41][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type keras_mlp --enable-feature-selection --n-features-select 15 --fs-method select_k_best_mutual_info
[0;31m[ERROR][0m Failed: keras_mlp_fs_select_k_best_mutual_info_15
[0;34m[2025-07-09 01:46:47][0m Starting experiment: keras_mlp_fs_select_k_best_mutual_info_20
[0;34m[2025-07-09 01:46:47][0m MLflow experiment: eeg_deep_learning_feature_selection
[0;34m[2025-07-09 01:46:47][0m Command: python eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type keras_mlp --enable-feature-selection --n-features-select 20 --fs-method select_k_best_mutual_info
[0;31m[ERROR][0m Failed: keras_mlp_fs_select_k_best_mutual_info_20
[0;34m[2025-07-09 01:46:53][0m === EXPERIMENT SUMMARY ===
[0;34m[2025-07-09 01:46:53][0m Total experiments: 42
[0;32m[SUCCESS][0m Successful: 28
[0;31m[ERROR][0m Failed: 14
[0;34m[2025-07-09 01:46:53][0m === DETAILED EXPERIMENT LIST ===
[0;34m[2025-07-09 01:46:53][0m Without feature selection:
  - random_forest
  - gradient_boosting
  - logistic_regression
  - svm
  - pytorch_mlp
  - keras_mlp
[0;34m[2025-07-09 01:46:54][0m With feature selection:
  - random_forest + select_k_best_f_classif (10 features)
  - random_forest + select_k_best_f_classif (15 features)
  - random_forest + select_k_best_f_classif (20 features)
  - random_forest + select_k_best_mutual_info (10 features)
  - random_forest + select_k_best_mutual_info (15 features)
  - random_forest + select_k_best_mutual_info (20 features)
  - gradient_boosting + select_k_best_f_classif (10 features)
  - gradient_boosting + select_k_best_f_classif (15 features)
  - gradient_boosting + select_k_best_f_classif (20 features)
  - gradient_boosting + select_k_best_mutual_info (10 features)
  - gradient_boosting + select_k_best_mutual_info (15 features)
  - gradient_boosting + select_k_best_mutual_info (20 features)
  - logistic_regression + select_k_best_f_classif (10 features)
  - logistic_regression + select_k_best_f_classif (15 features)
  - logistic_regression + select_k_best_f_classif (20 features)
  - logistic_regression + select_k_best_mutual_info (10 features)
  - logistic_regression + select_k_best_mutual_info (15 features)
  - logistic_regression + select_k_best_mutual_info (20 features)
  - svm + select_k_best_f_classif (10 features)
  - svm + select_k_best_f_classif (15 features)
  - svm + select_k_best_f_classif (20 features)
  - svm + select_k_best_mutual_info (10 features)
  - svm + select_k_best_mutual_info (15 features)
  - svm + select_k_best_mutual_info (20 features)
  - pytorch_mlp + select_k_best_f_classif (10 features)
  - pytorch_mlp + select_k_best_f_classif (15 features)
  - pytorch_mlp + select_k_best_f_classif (20 features)
  - pytorch_mlp + select_k_best_mutual_info (10 features)
  - pytorch_mlp + select_k_best_mutual_info (15 features)
  - pytorch_mlp + select_k_best_mutual_info (20 features)
  - keras_mlp + select_k_best_f_classif (10 features)
  - keras_mlp + select_k_best_f_classif (15 features)
  - keras_mlp + select_k_best_f_classif (20 features)
  - keras_mlp + select_k_best_mutual_info (10 features)
  - keras_mlp + select_k_best_mutual_info (15 features)
  - keras_mlp + select_k_best_mutual_info (20 features)
[0;34m[2025-07-09 01:46:54][0m All experiments completed!
[0;34m[2025-07-09 01:46:54][0m View results with: mlflow ui
[0;34m[2025-07-09 01:46:54][0m Full log saved to: experiment_log_20250709_011758.txt
[1;33m[WARNING][0m Some experiments failed. Check the log file for details.
