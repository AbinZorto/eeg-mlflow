[0;34m[2025-06-01 18:38:39][0m Starting EEG Analysis Complete Model Training
[0;34m[2025-06-01 18:38:39][0m Configuration file: eeg_analysis/configs/window_model_config.yaml
[0;34m[2025-06-01 18:38:39][0m Log file: experiment_log_20250601_183839.txt
[0;34m[2025-06-01 18:38:39][0m Total experiments to run: 28
[0;34m[2025-06-01 18:38:39][0m === PHASE 1: Models without feature selection ===
[0;34m[2025-06-01 18:38:39][0m Starting experiment: random_forest_no_fs
[0;34m[2025-06-01 18:38:39][0m Command: python3 eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type random_forest
[0;32m[SUCCESS][0m Completed: random_forest_no_fs
[0;34m[2025-06-01 18:40:21][0m Starting experiment: gradient_boosting_no_fs
[0;34m[2025-06-01 18:40:21][0m Command: python3 eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type gradient_boosting
[0;32m[SUCCESS][0m Completed: gradient_boosting_no_fs
[0;34m[2025-06-01 18:42:02][0m Starting experiment: logistic_regression_no_fs
[0;34m[2025-06-01 18:42:02][0m Command: python3 eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type logistic_regression
[0;32m[SUCCESS][0m Completed: logistic_regression_no_fs
[0;34m[2025-06-01 18:43:41][0m Starting experiment: svm_no_fs
[0;34m[2025-06-01 18:43:41][0m Command: python3 eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type svm
[0;32m[SUCCESS][0m Completed: svm_no_fs
[0;34m[2025-06-01 18:45:20][0m === PHASE 2: Models with feature selection ===
[0;34m[2025-06-01 18:45:20][0m Starting experiment: random_forest_fs_select_k_best_f_classif_10
[0;34m[2025-06-01 18:45:20][0m Command: python3 eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type random_forest --enable-feature-selection --n-features-select 10 --fs-method select_k_best_f_classif
[0;32m[SUCCESS][0m Completed: random_forest_fs_select_k_best_f_classif_10
[0;34m[2025-06-01 18:46:06][0m Starting experiment: random_forest_fs_select_k_best_f_classif_15
[0;34m[2025-06-01 18:46:06][0m Command: python3 eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type random_forest --enable-feature-selection --n-features-select 15 --fs-method select_k_best_f_classif
[0;32m[SUCCESS][0m Completed: random_forest_fs_select_k_best_f_classif_15
[0;34m[2025-06-01 18:46:51][0m Starting experiment: random_forest_fs_select_k_best_f_classif_20
[0;34m[2025-06-01 18:46:51][0m Command: python3 eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type random_forest --enable-feature-selection --n-features-select 20 --fs-method select_k_best_f_classif
[0;32m[SUCCESS][0m Completed: random_forest_fs_select_k_best_f_classif_20
[0;34m[2025-06-01 18:47:48][0m Starting experiment: random_forest_fs_select_k_best_mutual_info_10
[0;34m[2025-06-01 18:47:48][0m Command: python3 eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type random_forest --enable-feature-selection --n-features-select 10 --fs-method select_k_best_mutual_info
[0;32m[SUCCESS][0m Completed: random_forest_fs_select_k_best_mutual_info_10
[0;34m[2025-06-01 18:48:29][0m Starting experiment: random_forest_fs_select_k_best_mutual_info_15
[0;34m[2025-06-01 18:48:29][0m Command: python3 eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type random_forest --enable-feature-selection --n-features-select 15 --fs-method select_k_best_mutual_info
[0;32m[SUCCESS][0m Completed: random_forest_fs_select_k_best_mutual_info_15
[0;34m[2025-06-01 18:49:12][0m Starting experiment: random_forest_fs_select_k_best_mutual_info_20
[0;34m[2025-06-01 18:49:12][0m Command: python3 eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type random_forest --enable-feature-selection --n-features-select 20 --fs-method select_k_best_mutual_info
[0;32m[SUCCESS][0m Completed: random_forest_fs_select_k_best_mutual_info_20
[0;34m[2025-06-01 18:50:05][0m Starting experiment: gradient_boosting_fs_select_k_best_f_classif_10
[0;34m[2025-06-01 18:50:05][0m Command: python3 eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type gradient_boosting --enable-feature-selection --n-features-select 10 --fs-method select_k_best_f_classif
[0;32m[SUCCESS][0m Completed: gradient_boosting_fs_select_k_best_f_classif_10
[0;34m[2025-06-01 18:50:50][0m Starting experiment: gradient_boosting_fs_select_k_best_f_classif_15
[0;34m[2025-06-01 18:50:50][0m Command: python3 eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type gradient_boosting --enable-feature-selection --n-features-select 15 --fs-method select_k_best_f_classif
[0;32m[SUCCESS][0m Completed: gradient_boosting_fs_select_k_best_f_classif_15
[0;34m[2025-06-01 18:51:36][0m Starting experiment: gradient_boosting_fs_select_k_best_f_classif_20
[0;34m[2025-06-01 18:51:36][0m Command: python3 eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type gradient_boosting --enable-feature-selection --n-features-select 20 --fs-method select_k_best_f_classif
[0;32m[SUCCESS][0m Completed: gradient_boosting_fs_select_k_best_f_classif_20
[0;34m[2025-06-01 18:52:32][0m Starting experiment: gradient_boosting_fs_select_k_best_mutual_info_10
[0;34m[2025-06-01 18:52:32][0m Command: python3 eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type gradient_boosting --enable-feature-selection --n-features-select 10 --fs-method select_k_best_mutual_info
[0;32m[SUCCESS][0m Completed: gradient_boosting_fs_select_k_best_mutual_info_10
[0;34m[2025-06-01 18:53:14][0m Starting experiment: gradient_boosting_fs_select_k_best_mutual_info_15
[0;34m[2025-06-01 18:53:14][0m Command: python3 eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type gradient_boosting --enable-feature-selection --n-features-select 15 --fs-method select_k_best_mutual_info
[0;32m[SUCCESS][0m Completed: gradient_boosting_fs_select_k_best_mutual_info_15
[0;34m[2025-06-01 18:53:57][0m Starting experiment: gradient_boosting_fs_select_k_best_mutual_info_20
[0;34m[2025-06-01 18:53:58][0m Command: python3 eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type gradient_boosting --enable-feature-selection --n-features-select 20 --fs-method select_k_best_mutual_info
[0;32m[SUCCESS][0m Completed: gradient_boosting_fs_select_k_best_mutual_info_20
[0;34m[2025-06-01 18:54:50][0m Starting experiment: logistic_regression_fs_select_k_best_f_classif_10
[0;34m[2025-06-01 18:54:50][0m Command: python3 eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type logistic_regression --enable-feature-selection --n-features-select 10 --fs-method select_k_best_f_classif
[0;32m[SUCCESS][0m Completed: logistic_regression_fs_select_k_best_f_classif_10
[0;34m[2025-06-01 18:55:36][0m Starting experiment: logistic_regression_fs_select_k_best_f_classif_15
[0;34m[2025-06-01 18:55:36][0m Command: python3 eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type logistic_regression --enable-feature-selection --n-features-select 15 --fs-method select_k_best_f_classif
[0;32m[SUCCESS][0m Completed: logistic_regression_fs_select_k_best_f_classif_15
[0;34m[2025-06-01 18:56:23][0m Starting experiment: logistic_regression_fs_select_k_best_f_classif_20
[0;34m[2025-06-01 18:56:23][0m Command: python3 eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type logistic_regression --enable-feature-selection --n-features-select 20 --fs-method select_k_best_f_classif
[0;32m[SUCCESS][0m Completed: logistic_regression_fs_select_k_best_f_classif_20
[0;34m[2025-06-01 18:57:19][0m Starting experiment: logistic_regression_fs_select_k_best_mutual_info_10
[0;34m[2025-06-01 18:57:19][0m Command: python3 eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type logistic_regression --enable-feature-selection --n-features-select 10 --fs-method select_k_best_mutual_info
[0;32m[SUCCESS][0m Completed: logistic_regression_fs_select_k_best_mutual_info_10
[0;34m[2025-06-01 18:58:02][0m Starting experiment: logistic_regression_fs_select_k_best_mutual_info_15
[0;34m[2025-06-01 18:58:02][0m Command: python3 eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type logistic_regression --enable-feature-selection --n-features-select 15 --fs-method select_k_best_mutual_info
[0;32m[SUCCESS][0m Completed: logistic_regression_fs_select_k_best_mutual_info_15
[0;34m[2025-06-01 18:58:45][0m Starting experiment: logistic_regression_fs_select_k_best_mutual_info_20
[0;34m[2025-06-01 18:58:45][0m Command: python3 eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type logistic_regression --enable-feature-selection --n-features-select 20 --fs-method select_k_best_mutual_info
[0;32m[SUCCESS][0m Completed: logistic_regression_fs_select_k_best_mutual_info_20
[0;34m[2025-06-01 18:59:39][0m Starting experiment: svm_fs_select_k_best_f_classif_10
[0;34m[2025-06-01 18:59:39][0m Command: python3 eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type svm --enable-feature-selection --n-features-select 10 --fs-method select_k_best_f_classif
[0;32m[SUCCESS][0m Completed: svm_fs_select_k_best_f_classif_10
[0;34m[2025-06-01 19:00:25][0m Starting experiment: svm_fs_select_k_best_f_classif_15
[0;34m[2025-06-01 19:00:25][0m Command: python3 eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type svm --enable-feature-selection --n-features-select 15 --fs-method select_k_best_f_classif
[0;32m[SUCCESS][0m Completed: svm_fs_select_k_best_f_classif_15
[0;34m[2025-06-01 19:01:14][0m Starting experiment: svm_fs_select_k_best_f_classif_20
[0;34m[2025-06-01 19:01:14][0m Command: python3 eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type svm --enable-feature-selection --n-features-select 20 --fs-method select_k_best_f_classif
[0;32m[SUCCESS][0m Completed: svm_fs_select_k_best_f_classif_20
[0;34m[2025-06-01 19:02:12][0m Starting experiment: svm_fs_select_k_best_mutual_info_10
[0;34m[2025-06-01 19:02:12][0m Command: python3 eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type svm --enable-feature-selection --n-features-select 10 --fs-method select_k_best_mutual_info
[0;32m[SUCCESS][0m Completed: svm_fs_select_k_best_mutual_info_10
[0;34m[2025-06-01 19:02:56][0m Starting experiment: svm_fs_select_k_best_mutual_info_15
[0;34m[2025-06-01 19:02:56][0m Command: python3 eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type svm --enable-feature-selection --n-features-select 15 --fs-method select_k_best_mutual_info
[0;32m[SUCCESS][0m Completed: svm_fs_select_k_best_mutual_info_15
[0;34m[2025-06-01 19:03:40][0m Starting experiment: svm_fs_select_k_best_mutual_info_20
[0;34m[2025-06-01 19:03:40][0m Command: python3 eeg_analysis/run_pipeline.py --config eeg_analysis/configs/window_model_config.yaml train --level window --model-type svm --enable-feature-selection --n-features-select 20 --fs-method select_k_best_mutual_info
[0;32m[SUCCESS][0m Completed: svm_fs_select_k_best_mutual_info_20
[0;34m[2025-06-01 19:04:36][0m === EXPERIMENT SUMMARY ===
[0;34m[2025-06-01 19:04:36][0m Total experiments: 28
[0;32m[SUCCESS][0m Successful: 28
[0;32m[SUCCESS][0m Failed: 0
[0;34m[2025-06-01 19:04:36][0m === DETAILED EXPERIMENT LIST ===
[0;34m[2025-06-01 19:04:36][0m Without feature selection:
  - random_forest
  - gradient_boosting
  - logistic_regression
  - svm
[0;34m[2025-06-01 19:04:36][0m With feature selection:
  - random_forest + select_k_best_f_classif (10 features)
  - random_forest + select_k_best_f_classif (15 features)
  - random_forest + select_k_best_f_classif (20 features)
  - random_forest + select_k_best_mutual_info (10 features)
  - random_forest + select_k_best_mutual_info (15 features)
  - random_forest + select_k_best_mutual_info (20 features)
  - gradient_boosting + select_k_best_f_classif (10 features)
  - gradient_boosting + select_k_best_f_classif (15 features)
  - gradient_boosting + select_k_best_f_classif (20 features)
  - gradient_boosting + select_k_best_mutual_info (10 features)
  - gradient_boosting + select_k_best_mutual_info (15 features)
  - gradient_boosting + select_k_best_mutual_info (20 features)
  - logistic_regression + select_k_best_f_classif (10 features)
  - logistic_regression + select_k_best_f_classif (15 features)
  - logistic_regression + select_k_best_f_classif (20 features)
  - logistic_regression + select_k_best_mutual_info (10 features)
  - logistic_regression + select_k_best_mutual_info (15 features)
  - logistic_regression + select_k_best_mutual_info (20 features)
  - svm + select_k_best_f_classif (10 features)
  - svm + select_k_best_f_classif (15 features)
  - svm + select_k_best_f_classif (20 features)
  - svm + select_k_best_mutual_info (10 features)
  - svm + select_k_best_mutual_info (15 features)
  - svm + select_k_best_mutual_info (20 features)
[0;34m[2025-06-01 19:04:36][0m All experiments completed!
[0;34m[2025-06-01 19:04:36][0m View results with: mlflow ui
[0;34m[2025-06-01 19:04:36][0m Full log saved to: experiment_log_20250601_183839.txt
[0;32m[SUCCESS][0m All experiments completed successfully!
