# Window-Level Model Configuration

# Data Configuration
data:
  feature_path: "data/processed/features/window_features.parquet"
  split:
    test_size: 0.2
    random_state: 42
    stratify: true

# Model Configuration
model:
  type: "random_forest"
  params:
    random_forest:
      n_estimators: 200
      min_samples_leaf: 20
      max_features: 'sqrt'
      class_weight: 'balanced'
      random_state: 42
    gradient_boosting:
      n_estimators: 200
      learning_rate: 0.1
      max_depth: 5
      min_samples_leaf: 10
      random_state: 42
    logistic_regression:
      max_iter: 1000
      class_weight: 'balanced'
      penalty: 'l2'
      C: 1.0
      random_state: 42
    svm:
      kernel: 'rbf'
      C: 1.0
      class_weight: 'balanced'
      probability: true
      random_state: 42

# Paths Configuration
paths:
  models: "models/window_level"
  features: "data/processed/features"
  logs: "logs"

# Output Configuration
output:
  save_predictions: true
  save_probabilities: true
  feature_importance: true
  performance_plots: true

# MLflow Tracking
mlflow:
  experiment_name: "window_level_training"
  tracking_uri: "mlruns"
  register_model: true
  model_stage: "Development"
  artifact_location: "mlruns/artifacts"

# Evaluation Metrics
metrics:
  window_level:
    - accuracy
    - precision
    - recall
    - f1
    - roc_auc
  patient_level:
    - accuracy
    - precision
    - recall
    - f1
    - roc_auc

# Logging Configuration
logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file: "logs/window_training.log"
  console: true