# Optimized Window-Level Model Configuration for Dual RTX 3090 Setup

# Data Configuration
data:
  feature_path: "data/processed/features/2s_window_features.parquet"
  split:
    test_size: 0.2
    random_state: 42
    stratify: true

# Model Configuration - Optimized for GPU performance
model_type: "pytorch_mlp" # GPU-optimized model

model:
  name: "patient_model_optimized"

  params:
    random_forest:
      n_estimators: 200
      min_samples_leaf: 2
      max_features: "sqrt"
      class_weight: "balanced"
      random_state: 42

# Optimized Deep Learning Configuration for RTX 3090
deep_learning:
  pytorch_mlp:
    hidden_layers: [256, 128, 64] # Larger network to utilize GPU better
    dropout_rate: 0.2 # Reduced dropout for faster training
    weight_decay: 0.001 # Reduced weight decay
    learning_rate: 0.01 # Higher learning rate for faster convergence
    batch_size: 512 # Much larger batch size for GPU efficiency
    epochs: 100 # Fewer epochs with faster convergence
    early_stopping_patience: 15 # Less patience for faster training
    batch_norm: true
    activation: "relu"
    optimizer: "adam"
    class_weight: "balanced"
    random_state: 42

  keras_mlp:
    hidden_layers: [256, 128, 64] # Larger network
    dropout_rate: 0.2
    l1_reg: 0.0001 # Reduced regularization
    l2_reg: 0.001 # Reduced regularization  
    learning_rate: 0.01 # Higher learning rate
    batch_size: 512 # Much larger batch size
    epochs: 100 # Fewer epochs
    early_stopping_patience: 15
    batch_norm: true
    activation: "relu"
    optimizer: "adam"
    class_weight: "balanced"
    random_state: 42

# Paths Configuration
paths:
  models: "models/window_level"
  features: "data/processed/features"
  logs: "logs"

# Output Configuration
output:
  save_predictions: true
  save_probabilities: true
  feature_importance: true
  performance_plots: true

# MLflow Tracking
mlflow:
  experiment_name: "window_training_optimized"
  tracking_uri: "file:./mlruns"
  register_model: true
  model_stage: "Development"
  artifact_location: "./mlruns"

# Evaluation Metrics
metrics:
  window_level:
    - accuracy
    - precision
    - recall
    - f1
    - roc_auc
  patient_level:
    - accuracy
    - precision
    - recall
    - f1
    - roc_auc

# Logging Configuration
logging:
  level: "INFO"
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  file: "logs/window_training_optimized.log"
  console: true 